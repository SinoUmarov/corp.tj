"use client"

import { useState, useEffect } from "react"
import { Button } from "@/components/ui/button"
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import { Input } from "@/components/ui/input"
import { Label } from "@/components/ui/label"
import { Textarea } from "@/components/ui/textarea"
import { Switch } from "@/components/ui/switch"
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select"
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs"
import { Badge } from "@/components/ui/badge"
import { User, Mail, Phone, MapPin, Save, Camera, Key, Download, Trash2 } from "lucide-react"
import { useTheme } from "next-themes"

export function ProfileSettings() {
  const [profile, setProfile] = useState({
    name: "",
    email: "",
    phone: "",
    location: "",
    department: "",
    position: "",
    bio: "",
    avatar: "",
  })

  const [notifications, setNotifications] = useState({
    email: true,
    push: true,
    tasks: true,
    meetings: true,
    mentions: false,
  })

  const [privacy, setPrivacy] = useState({
    profileVisible: true,
    statusVisible: true,
    activityVisible: false,
  })

  const { theme, setTheme } = useTheme()

  useEffect(() => {
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è –∏–∑ localStorage
    const storedProfile = {
      name: localStorage.getItem("username") || "",
      email: `${localStorage.getItem("user_id") || "user"}@company.com`,
      phone: "+7 (999) 123-45-67",
      location: "–ú–æ—Å–∫–≤–∞, –†–æ—Å—Å–∏—è",
      department: localStorage.getItem("user_department") || "",
      position:
        localStorage.getItem("user_role") === "admin"
          ? "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"
          : localStorage.getItem("user_role") === "manager"
            ? "–ú–µ–Ω–µ–¥–∂–µ—Ä"
            : "–°–æ—Ç—Ä—É–¥–Ω–∏–∫",
      bio: "–û–ø—ã—Ç–Ω—ã–π —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç —Å –º–Ω–æ–≥–æ–ª–µ—Ç–Ω–∏–º —Å—Ç–∞–∂–µ–º —Ä–∞–±–æ—Ç—ã –≤ IT-—Å—Ñ–µ—Ä–µ.",
      avatar: localStorage.getItem("user_avatar") || "üë§",
    }
    setProfile(storedProfile)
  }, [])

  const handleSaveProfile = () => {
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ localStorage
    localStorage.setItem("username", profile.name)
    localStorage.setItem("user_department", profile.department)
    alert("–ü—Ä–æ—Ñ–∏–ª—å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!")
  }

  const handleExportData = () => {
    const data = {
      profile,
      notifications,
      privacy,
      exportDate: new Date().toISOString(),
    }
    const blob = new Blob([JSON.stringify(data, null, 2)], { type: "application/json" })
    const url = URL.createObjectURL(blob)
    const a = document.createElement("a")
    a.href = url
    a.download = "profile-data.json"
    a.click()
    URL.revokeObjectURL(url)
  }

  return (
    <div className="space-y-6">
      <div className="flex items-center justify-between">
        <div>
          <h2 className="text-2xl font-bold">–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è</h2>
          <p className="text-muted-foreground">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ª–∏—á–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏</p>
        </div>
        <Button onClick={handleSaveProfile}>
          <Save className="mr-2 h-4 w-4" />
          –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è
        </Button>
      </div>

      <Tabs defaultValue="profile" className="space-y-4">
        <TabsList className="grid w-full grid-cols-5">
          <TabsTrigger value="profile">–ü—Ä–æ—Ñ–∏–ª—å</TabsTrigger>
          <TabsTrigger value="notifications">–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</TabsTrigger>
          <TabsTrigger value="privacy">–ü—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å</TabsTrigger>
          <TabsTrigger value="appearance">–í–Ω–µ—à–Ω–∏–π –≤–∏–¥</TabsTrigger>
          <TabsTrigger value="security">–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å</TabsTrigger>
        </TabsList>

        <TabsContent value="profile" className="space-y-6">
          <Card>
            <CardHeader>
              <CardTitle>–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</CardTitle>
              <CardDescription>–û–±–Ω–æ–≤–∏—Ç–µ —Å–≤–æ–∏ –ª–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ</CardDescription>
            </CardHeader>
            <CardContent className="space-y-6">
              <div className="flex items-center space-x-6">
                <div className="relative">
                  <div className="w-24 h-24 rounded-full bg-gray-100 flex items-center justify-center text-4xl">
                    {profile.avatar}
                  </div>
                  <Button size="sm" className="absolute -bottom-2 -right-2 rounded-full w-8 h-8 p-0">
                    <Camera className="h-4 w-4" />
                  </Button>
                </div>
                <div className="space-y-2">
                  <h3 className="text-lg font-medium">{profile.name}</h3>
                  <p className="text-sm text-muted-foreground">{profile.position}</p>
                  <Badge variant="secondary">{profile.department}</Badge>
                </div>
              </div>

              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div className="space-y-2">
                  <Label htmlFor="name">–ü–æ–ª–Ω–æ–µ –∏–º—è</Label>
                  <div className="relative">
                    <User className="absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-muted-foreground" />
                    <Input
                      id="name"
                      value={profile.name}
                      onChange={(e) => setProfile((prev) => ({ ...prev, name: e.target.value }))}
                      className="pl-10"
                    />
                  </div>
                </div>

                <div className="space-y-2">
                  <Label htmlFor="email">Email</Label>
                  <div className="relative">
                    <Mail className="absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-muted-foreground" />
                    <Input
                      id="email"
                      type="email"
                      value={profile.email}
                      onChange={(e) => setProfile((prev) => ({ ...prev, email: e.target.value }))}
                      className="pl-10"
                    />
                  </div>
                </div>

                <div className="space-y-2">
                  <Label htmlFor="phone">–¢–µ–ª–µ—Ñ–æ–Ω</Label>
                  <div className="relative">
                    <Phone className="absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-muted-foreground" />
                    <Input
                      id="phone"
                      value={profile.phone}
                      onChange={(e) => setProfile((prev) => ({ ...prev, phone: e.target.value }))}
                      className="pl-10"
                    />
                  </div>
                </div>

                <div className="space-y-2">
                  <Label htmlFor="location">–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ</Label>
                  <div className="relative">
                    <MapPin className="absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-muted-foreground" />
                    <Input
                      id="location"
                      value={profile.location}
                      onChange={(e) => setProfile((prev) => ({ ...prev, location: e.target.value }))}
                      className="pl-10"
                    />
                  </div>
                </div>

                <div className="space-y-2">
                  <Label htmlFor="department">–û—Ç–¥–µ–ª</Label>
                  <Select
                    value={profile.department}
                    onValueChange={(value) => setProfile((prev) => ({ ...prev, department: value }))}
                  >
                    <SelectTrigger>
                      <SelectValue />
                    </SelectTrigger>
                    <SelectContent>
                      <SelectItem value="IT">IT</SelectItem>
                      <SelectItem value="–î–∏–∑–∞–π–Ω">–î–∏–∑–∞–π–Ω</SelectItem>
                      <SelectItem value="–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞">–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞</SelectItem>
                      <SelectItem value="QA">QA</SelectItem>
                      <SelectItem value="–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ</SelectItem>
                      <SelectItem value="–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥">–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥</SelectItem>
                      <SelectItem value="–ü—Ä–æ–¥–∞–∂–∏">–ü—Ä–æ–¥–∞–∂–∏</SelectItem>
                    </SelectContent>
                  </Select>
                </div>

                <div className="space-y-2">
                  <Label htmlFor="position">–î–æ–ª–∂–Ω–æ—Å—Ç—å</Label>
                  <Input
                    id="position"
                    value={profile.position}
                    onChange={(e) => setProfile((prev) => ({ ...prev, position: e.target.value }))}
                  />
                </div>
              </div>

              <div className="space-y-2">
                <Label htmlFor="bio">–û —Å–µ–±–µ</Label>
                <Textarea
                  id="bio"
                  value={profile.bio}
                  onChange={(e) => setProfile((prev) => ({ ...prev, bio: e.target.value }))}
                  placeholder="–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–µ–±–µ..."
                  rows={4}
                />
              </div>
            </CardContent>
          </Card>
        </TabsContent>

        <TabsContent value="notifications" className="space-y-6">
          <Card>
            <CardHeader>
              <CardTitle>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π</CardTitle>
              <CardDescription>–£–ø—Ä–∞–≤–ª—è–π—Ç–µ —Å–ø–æ—Å–æ–±–∞–º–∏ –ø–æ–ª—É—á–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π</CardDescription>
            </CardHeader>
            <CardContent className="space-y-6">
              <div className="space-y-4">
                <div className="flex items-center justify-between">
                  <div className="space-y-0.5">
                    <Label>Email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</Label>
                    <p className="text-sm text-muted-foreground">–ü–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –Ω–∞ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É—é –ø–æ—á—Ç—É</p>
                  </div>
                  <Switch
                    checked={notifications.email}
                    onCheckedChange={(checked) => setNotifications((prev) => ({ ...prev, email: checked }))}
                  />
                </div>

                <div className="flex items-center justify-between">
                  <div className="space-y-0.5">
                    <Label>Push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</Label>
                    <p className="text-sm text-muted-foreground">–ü–æ–ª—É—á–∞—Ç—å push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ –±—Ä–∞—É–∑–µ—Ä–µ</p>
                  </div>
                  <Switch
                    checked={notifications.push}
                    onCheckedChange={(checked) => setNotifications((prev) => ({ ...prev, push: checked }))}
                  />
                </div>

                <div className="flex items-center justify-between">
                  <div className="space-y-0.5">
                    <Label>–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∑–∞–¥–∞—á–∞—Ö</Label>
                    <p className="text-sm text-muted-foreground">–ù–æ–≤—ã–µ –∑–∞–¥–∞—á–∏ –∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞</p>
                  </div>
                  <Switch
                    checked={notifications.tasks}
                    onCheckedChange={(checked) => setNotifications((prev) => ({ ...prev, tasks: checked }))}
                  />
                </div>

                <div className="flex items-center justify-between">
                  <div className="space-y-0.5">
                    <Label>–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –≤—Å—Ç—Ä–µ—á–∞—Ö</Label>
                    <p className="text-sm text-muted-foreground">–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏—Ö –≤—Å—Ç—Ä–µ—á–∞—Ö</p>
                  </div>
                  <Switch
                    checked={notifications.meetings}
                    onCheckedChange={(checked) => setNotifications((prev) => ({ ...prev, meetings: checked }))}
                  />
                </div>

                <div className="flex items-center justify-between">
                  <div className="space-y-0.5">
                    <Label>–£–ø–æ–º–∏–Ω–∞–Ω–∏—è –≤ —á–∞—Ç–µ</Label>
                    <p className="text-sm text-muted-foreground">–ö–æ–≥–¥–∞ –≤–∞—Å —É–ø–æ–º–∏–Ω–∞—é—Ç –≤ —Å–æ–æ–±—â–µ–Ω–∏—è—Ö</p>
                  </div>
                  <Switch
                    checked={notifications.mentions}
                    onCheckedChange={(checked) => setNotifications((prev) => ({ ...prev, mentions: checked }))}
                  />
                </div>
              </div>
            </CardContent>
          </Card>
        </TabsContent>

        <TabsContent value="privacy" className="space-y-6">
          <Card>
            <CardHeader>
              <CardTitle>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏</CardTitle>
              <CardDescription>–ö–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–π—Ç–µ –≤–∏–¥–∏–º–æ—Å—Ç—å –≤–∞—à–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏</CardDescription>
            </CardHeader>
            <CardContent className="space-y-6">
              <div className="space-y-4">
                <div className="flex items-center justify-between">
                  <div className="space-y-0.5">
                    <Label>–í–∏–¥–∏–º–æ—Å—Ç—å –ø—Ä–æ—Ñ–∏–ª—è</Label>
                    <p className="text-sm text-muted-foreground">–î—Ä—É–≥–∏–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ –º–æ–≥—É—Ç –≤–∏–¥–µ—Ç—å –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å</p>
                  </div>
                  <Switch
                    checked={privacy.profileVisible}
                    onCheckedChange={(checked) => setPrivacy((prev) => ({ ...prev, profileVisible: checked }))}
                  />
                </div>

                <div className="flex items-center justify-between">
                  <div className="space-y-0.5">
                    <Label>–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å —Å—Ç–∞—Ç—É—Å</Label>
                    <p className="text-sm text-muted-foreground">–û—Ç–æ–±—Ä–∞–∂–∞—Ç—å –≤–∞—à –æ–Ω–ª–∞–π–Ω —Å—Ç–∞—Ç—É—Å</p>
                  </div>
                  <Switch
                    checked={privacy.statusVisible}
                    onCheckedChange={(checked) => setPrivacy((prev) => ({ ...prev, statusVisible: checked }))}
                  />
                </div>

                <div className="flex items-center justify-between">
                  <div className="space-y-0.5">
                    <Label>–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</Label>
                    <p className="text-sm text-muted-foreground">–î—Ä—É–≥–∏–µ –º–æ–≥—É—Ç –≤–∏–¥–µ—Ç—å –≤–∞—à—É —Ä–∞–±–æ—á—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</p>
                  </div>
                  <Switch
                    checked={privacy.activityVisible}
                    onCheckedChange={(checked) => setPrivacy((prev) => ({ ...prev, activityVisible: checked }))}
                  />
                </div>
              </div>
            </CardContent>
          </Card>
        </TabsContent>

        <TabsContent value="appearance" className="space-y-6">
          <Card>
            <CardHeader>
              <CardTitle>–í–Ω–µ—à–Ω–∏–π –≤–∏–¥</CardTitle>
              <CardDescription>–ù–∞—Å—Ç—Ä–æ–π—Ç–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø–æ–¥ —Å–µ–±—è</CardDescription>
            </CardHeader>
            <CardContent className="space-y-6">
              <div className="space-y-4">
                <div className="space-y-2">
                  <Label>–¢–µ–º–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è</Label>
                  <Select value={theme} onValueChange={setTheme}>
                    <SelectTrigger>
                      <SelectValue />
                    </SelectTrigger>
                    <SelectContent>
                      <SelectItem value="light">–°–≤–µ—Ç–ª–∞—è</SelectItem>
                      <SelectItem value="dark">–¢–µ–º–Ω–∞—è</SelectItem>
                      <SelectItem value="system">–°–∏—Å—Ç–µ–º–Ω–∞—è</SelectItem>
                    </SelectContent>
                  </Select>
                </div>

                <div className="space-y-2">
                  <Label>–Ø–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞</Label>
                  <Select defaultValue="ru">
                    <SelectTrigger>
                      <SelectValue />
                    </SelectTrigger>
                    <SelectContent>
                      <SelectItem value="ru">–†—É—Å—Å–∫–∏–π</SelectItem>
                      <SelectItem value="en">English</SelectItem>
                      <SelectItem value="de">Deutsch</SelectItem>
                    </SelectContent>
                  </Select>
                </div>

                <div className="space-y-2">
                  <Label>–ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å</Label>
                  <Select defaultValue="msk">
                    <SelectTrigger>
                      <SelectValue />
                    </SelectTrigger>
                    <SelectContent>
                      <SelectItem value="msk">–ú–æ—Å–∫–≤–∞ (UTC+3)</SelectItem>
                      <SelectItem value="spb">–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥ (UTC+3)</SelectItem>
                      <SelectItem value="ekb">–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥ (UTC+5)</SelectItem>
                      <SelectItem value="nsk">–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫ (UTC+7)</SelectItem>
                    </SelectContent>
                  </Select>
                </div>
              </div>
            </CardContent>
          </Card>
        </TabsContent>

        <TabsContent value="security" className="space-y-6">
          <Card>
            <CardHeader>
              <CardTitle>–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å</CardTitle>
              <CardDescription>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª–µ–º –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å—é –∞–∫–∫–∞—É–Ω—Ç–∞</CardDescription>
            </CardHeader>
            <CardContent className="space-y-6">
              <div className="space-y-4">
                <Button variant="outline" className="w-full justify-start bg-transparent">
                  <Key className="mr-2 h-4 w-4" />
                  –ò–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å
                </Button>

                <Button variant="outline" className="w-full justify-start bg-transparent" onClick={handleExportData}>
                  <Download className="mr-2 h-4 w-4" />
                  –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ
                </Button>

                <div className="border-t pt-4">
                  <h4 className="font-medium text-red-600 mb-2">–û–ø–∞—Å–Ω–∞—è –∑–æ–Ω–∞</h4>
                  <Button variant="destructive" className="w-full justify-start">
                    <Trash2 className="mr-2 h-4 w-4" />
                    –£–¥–∞–ª–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç
                  </Button>
                </div>
              </div>
            </CardContent>
          </Card>
        </TabsContent>
      </Tabs>
    </div>
  )
}
